"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[87],{3905:(t,e,a)=>{a.d(e,{Zo:()=>d,kt:()=>c});var r=a(7294);function n(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function i(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,r)}return a}function l(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?i(Object(a),!0).forEach((function(e){n(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function p(t,e){if(null==t)return{};var a,r,n=function(t,e){if(null==t)return{};var a,r,n={},i=Object.keys(t);for(r=0;r<i.length;r++)a=i[r],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)a=i[r],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}var o=r.createContext({}),m=function(t){var e=r.useContext(o),a=e;return t&&(a="function"==typeof t?t(e):l(l({},e),t)),a},d=function(t){var e=m(t.components);return r.createElement(o.Provider,{value:e},t.children)},g={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},u=r.forwardRef((function(t,e){var a=t.components,n=t.mdxType,i=t.originalType,o=t.parentName,d=p(t,["components","mdxType","originalType","parentName"]),u=m(a),c=n,s=u["".concat(o,".").concat(c)]||u[c]||g[c]||i;return a?r.createElement(s,l(l({ref:e},d),{},{components:a})):r.createElement(s,l({ref:e},d))}));function c(t,e){var a=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var i=a.length,l=new Array(i);l[0]=u;var p={};for(var o in e)hasOwnProperty.call(e,o)&&(p[o]=e[o]);p.originalType=t,p.mdxType="string"==typeof t?t:n,l[1]=p;for(var m=2;m<i;m++)l[m]=a[m];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},6249:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>o,contentTitle:()=>l,default:()=>g,frontMatter:()=>i,metadata:()=>p,toc:()=>m});var r=a(7462),n=(a(7294),a(3905));const i={title:"GPU Policy Adapter"},l=void 0,p={unversionedId:"configuration/gpuadapter",id:"configuration/gpuadapter",title:"GPU Policy Adapter",description:"The GPU Adapter is currently experimental and is behind a feature gate.  To turn this on you need to run the Opni Manager with the following argument --feature-gates=GPUOperator=true",source:"@site/docs/configuration/gpuadapter.md",sourceDirName:"configuration",slug:"/configuration/gpuadapter",permalink:"/configuration/gpuadapter",draft:!1,editUrl:"https://github.com/rancher/opni-docs/edit/main/docs/configuration/gpuadapter.md",tags:[],version:"current",frontMatter:{title:"GPU Policy Adapter"}},o={},m=[{value:"Custom Resource Specs",id:"custom-resource-specs",level:3},{value:"GpuPolicyAdapterSpec",id:"gpupolicyadapterspec",level:4},{value:"ImagesSpec",id:"imagesspec",level:4},{value:"VGPUSpec",id:"vgpuspec",level:4}],d={toc:m};function g(t){let{components:e,...a}=t;return(0,n.kt)("wrapper",(0,r.Z)({},d,a,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("admonition",{type:"caution"},(0,n.kt)("p",{parentName:"admonition"},"The GPU Adapter is currently experimental and is behind a feature gate.  To turn this on you need to run the Opni Manager with the following argument ",(0,n.kt)("inlineCode",{parentName:"p"},"--feature-gates=GPUOperator=true"))),(0,n.kt)("p",null,"The Opni Manager can assist with configuring NVIDIA GPU drivers and runtimes.  To do this it uses an embedded ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/NVIDIA/gpu-operator"},"NVIDIA GPU Operator")," with a wrapper.  The GPU operator requires Node Feature Discovery running as a prerequisite.  If this is not already deployed it can be run with the following command:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -f https://raw.githubusercontent.com/rancher/opni/main/deploy/examples/nfd_aio.yaml\n")),(0,n.kt)("p",null,"It currently supports the following Kubernetes distributions:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"rke"),(0,n.kt)("li",{parentName:"ul"},"k3s (v1.22.2+k3s1 or later)"),(0,n.kt)("li",{parentName:"ul"},"auto (auto detection)")),(0,n.kt)("p",null,"And the following container runtimes:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"docker"),(0,n.kt)("li",{parentName:"ul"},"containerd"),(0,n.kt)("li",{parentName:"ul"},"crio"),(0,n.kt)("li",{parentName:"ul"},"auto (auto detection)")),(0,n.kt)("p",null,(0,n.kt)("em",{parentName:"p"},"example.yaml")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: opni.io/v1beta1\nkind: GpuPolicyAdapter\nmetadata:\n  name: example-adapter\nspec: {}\n")),(0,n.kt)("h3",{id:"custom-resource-specs"},"Custom Resource Specs"),(0,n.kt)("h4",{id:"gpupolicyadapterspec"},"GpuPolicyAdapterSpec"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Field"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"containerRuntime"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"string")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The container runtime the host is using.  Must be one of docker, containerd, crio, or auto.  Defaults to auto")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"kubernetesProvider"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"string")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The kubernetes distribution.  Must be one of k3s, rke2, rke, auto, or none.  Defaults to auto")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"images"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"#imagesspec"},"ImagesSpec")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Overrides for the images used by the operator (primarily for airgapped scenarios)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"vgpu"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"#vgpuspec"},"VGPUSpec")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Additional config required if using vGPUs")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"template"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},"nvidia ClusterPolicySpec"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Overrides for the ClusterPolicy created by the GpuPolicyAdapter.  Details about the fields can be found in the ",(0,n.kt)("a",{parentName:"td",href:"https://docs.nvidia.com/datacenter/cloud-native/gpu-operator/getting-started.html"},"NVIDIA documentation")," or by reviewing the ",(0,n.kt)("a",{parentName:"td",href:"https://github.com/NVIDIA/gpu-operator/blob/master/api/v1/clusterpolicy_types.go"},"NVIDIA code"))))),(0,n.kt)("h4",{id:"imagesspec"},"ImagesSpec"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Field"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"driver"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"string")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Driver image")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"driverManager"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"string")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Driver Manager image")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"dcgm"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"string")),(0,n.kt)("td",{parentName:"tr",align:"left"},"DCGM image")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"dcgmExporter"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"string")),(0,n.kt)("td",{parentName:"tr",align:"left"},"DCGM Exporter image")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"devicePlugin"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"string")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Device Plugin image")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"gfd"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"string")),(0,n.kt)("td",{parentName:"tr",align:"left"},"GFD image")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"initContainer"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"string")),(0,n.kt)("td",{parentName:"tr",align:"left"},"InitContainer image for deployed workloads")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"toolkit"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"string")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Toolkit image")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"validator"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"string")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Validator image")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"migManager"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"string")),(0,n.kt)("td",{parentName:"tr",align:"left"},"MIG Manager image")))),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"Details about the images can be found in the ",(0,n.kt)("a",{parentName:"p",href:"https://docs.nvidia.com/datacenter/cloud-native/gpu-operator/appendix.html#install-gpu-operator-in-air-gapped-environments"},"NVIDIA airgap documentation"))),(0,n.kt)("h4",{id:"vgpuspec"},"VGPUSpec"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Field"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"licenseConfigMap"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Yes"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"string")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Name of the config map that contains the vGPU license file")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"licenseServerKind"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Yes"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"string")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The type of vGPU license.  Must be one of nls, or legacy")))))}g.isMDXComponent=!0}}]);