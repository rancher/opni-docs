"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[636],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>f});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=r.createContext({}),d=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},m=function(e){var t=d(e.components);return r.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},N=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,p=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),N=d(a),f=n,k=N["".concat(p,".").concat(f)]||N[f]||s[f]||l;return a?r.createElement(k,i(i({ref:t},m),{},{components:a})):r.createElement(k,i({ref:t},m))}));function f(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,i=new Array(l);i[0]=N;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:n,i[1]=o;for(var d=2;d<l;d++)i[d]=a[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}N.displayName="MDXCreateElement"},564:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>s,frontMatter:()=>l,metadata:()=>o,toc:()=>d});var r=a(7462),n=(a(7294),a(3905));const l={title:"OpniCluster"},i=void 0,o={unversionedId:"configuration/opnicluster",id:"configuration/opnicluster",title:"OpniCluster",description:"The OpniCluster resource controls the deployment of the Opni microservices, along with prerequisite infrastructure (such as NATS).  This is the main resource used for deploying Opni.",source:"@site/docs/configuration/opnicluster.md",sourceDirName:"configuration",slug:"/configuration/opnicluster",permalink:"/configuration/opnicluster",draft:!1,editUrl:"https://github.com/rancher/opni-docs/edit/main/docs/configuration/opnicluster.md",tags:[],version:"current",frontMatter:{title:"OpniCluster"}},p={},d=[{value:"Custom Resource Specs",id:"custom-resource-specs",level:3},{value:"OpniClusterSpec",id:"opniclusterspec",level:4},{value:"ServicesSpec",id:"servicesspec",level:4},{value:"DrainServiceSpec",id:"drainservicespec",level:4},{value:"InferenceServiceSpec",id:"inferenceservicespec",level:4},{value:"PreprocessingServiceSpec",id:"preprocessingservicespec",level:4},{value:"PayloadReceiverServiceSpec",id:"payloadreceiverservicespec",level:4},{value:"GPUControllerServiceSpec",id:"gpucontrollerservicespec",level:4},{value:"MetricsServiceSpec",id:"metricsservicespec",level:4},{value:"InsightsServiceSpec",id:"insightsservicespec",level:4},{value:"UIServiceSpec",id:"uiservicespec",level:4},{value:"PrometheusReference",id:"prometheusreference",level:4}],m={toc:d};function s(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"The OpniCluster resource controls the deployment of the Opni microservices, along with prerequisite infrastructure (such as NATS).  This is the main resource used for deploying Opni."),(0,n.kt)("p",null,(0,n.kt)("em",{parentName:"p"},"example.yaml")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: opni.io/v1beta1\nkind: OpniCluster\nmetadata:\n  name: example\n  namespace: opni\nspec:\n  version: v0.1.3\n  deployLogCollector: true\n  services:\n    inference:\n      enabled: true\n      pretrainedModels:\n        - name: control-plane\n    gpuController:\n      enabled: false\n  elastic:\n    version: 1.13.2\n  nats:\n    authMethod: nkey\n  s3:\n    internal: {}\n")),(0,n.kt)("h3",{id:"custom-resource-specs"},"Custom Resource Specs"),(0,n.kt)("h4",{id:"opniclusterspec"},"OpniClusterSpec"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Field"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"version"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"string")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The version of the Opni service images to deploy.  Defaults to ",(0,n.kt)("inlineCode",{parentName:"td"},"latest"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"defaultRepo"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"string")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Docker repo to use for the Opni service images.  Defaults to ",(0,n.kt)("inlineCode",{parentName:"td"},"docker.io/rancher"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"services"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"#servicesspec"},"ServicesSpec")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Configuration for the individual Opni services")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"elastic"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"/configuration/elasticsearch#elasticspec"},"ElasticSpec")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Configures the Opendistro Elasticsearch cluster deployed along with Opni")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"nats"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"/configuration/nats#natsspec"},"NatsSpec")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Configures the NATS cluster deployed along with Opni")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"s3"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Yes"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"/configuration/s3#s3spec"},"S3Spec")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Configures the S3 storage used for persisting the AI models")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"deployLogCollector"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"bool")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Whether the Opni ClusterFlow and ClusterOutput should be deployed.  Defaults to true.  See ",(0,n.kt)("a",{parentName:"td",href:"../../setup/log-shipping"},"Log Shipping")," for more details")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"globalNodeSelector"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},"map"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A node selector that will get applied to all Opni components and deployed infrastructure")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"globalTolerations"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.22/#toleration-v1-core"},"Toleration")," ",(0,n.kt)("em",{parentName:"td"},"array")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Tolerations that will get applied to all Opni components and infrastructure")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"nulogHyperParameters"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},"map"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Overrides for the default nulog hyperparameters")))),(0,n.kt)("admonition",{type:"warning"},(0,n.kt)("p",{parentName:"admonition"},"The default hyperparameters should not be overridden unless there is a specific reason to")),(0,n.kt)("h4",{id:"servicesspec"},"ServicesSpec"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Field"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"drain"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"#drainservicespec"},"DrainServiceSpec")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Configuration for the Opni Drain service")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"inference"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"#inferenceservicespec"},"InferenceServiceSpec")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Configuration for the Opni Nulog Inference services")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"preprocessing"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"#preprocessingservicespec"},"PreprocessingServiceSpec")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Configuration for the Opni Preprocessing service")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"payloadReceiver"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"#payloadreceiverservicespec"},"PayloadReceiverServiceSpec")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Configuration for the Opni HTTP Payload Receiver service")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"gpuController"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"#gpucontrollerservicespec"},"GPUControllerServiceSpec")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Configuration for the optional GPU service")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"metrics"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"#metricsservicespec"},"MetricsServiceSpec")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Configuration for the metrics anomaly detection service")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"insights"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"#insightsservicespec"},"InsightsServiceSpec")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Configuration for the insights api service")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"ui"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"#uiservicespec"},"UIServiceSpec")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Configuration for the custom Opni UI service")))),(0,n.kt)("h4",{id:"drainservicespec"},"DrainServiceSpec"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Field"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"image"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"string")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Explicit override for the image to use for the service")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"imagePullPolicy"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"string")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Image pull policy. One of Always, Never, IfNotPresent. Defaults to ",(0,n.kt)("inlineCode",{parentName:"td"},"IfNotPresent"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"imagePullSecrets"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.22/#localobjectreference-v1-core"},"LocalObjectReference")," ",(0,n.kt)("em",{parentName:"td"},"array")),(0,n.kt)("td",{parentName:"tr",align:"left"},"List of secrets in the same namespace to use for pulling the image")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"enabled"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"bool")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Enable the service.  Defaults to true")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"nodeSelector"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},"map"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A node selector that will be applied to the Drain service.  This overrides the globalNodeSelector field")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"tolerations"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.22/#toleration-v1-core"},"Toleration")," ",(0,n.kt)("em",{parentName:"td"},"array")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Tolerations for the service.  These will be added to the tolerations in globalTolerations (if any)")))),(0,n.kt)("h4",{id:"inferenceservicespec"},"InferenceServiceSpec"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Field"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"image"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"string")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Explicit override for the image to use for the service")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"imagePullPolicy"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"string")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Image pull policy. One of Always, Never, IfNotPresent. Defaults to ",(0,n.kt)("inlineCode",{parentName:"td"},"IfNotPresent"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"imagePullSecrets"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.22/#localobjectreference-v1-core"},"LocalObjectReference")," ",(0,n.kt)("em",{parentName:"td"},"array")),(0,n.kt)("td",{parentName:"tr",align:"left"},"List of secrets in the same namespace to use for pulling the image")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"enabled"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"bool")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Enable the service.  Defaults to true")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"nodeSelector"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},"map"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A node selector that will be applied to the Drain service.  This overrides the globalNodeSelector field")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"tolerations"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.22/#toleration-v1-core"},"Toleration")," ",(0,n.kt)("em",{parentName:"td"},"array")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Tolerations for the service.  These will be added to the tolerations in globalTolerations (if any)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"pretrainedModels"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.22/#localobjectreference-v1-core"},"LocalObjectReference")," ",(0,n.kt)("em",{parentName:"td"},"array")),(0,n.kt)("td",{parentName:"tr",align:"left"},"A list of pretrained models to deploy.  Object references should point to a ",(0,n.kt)("a",{parentName:"td",href:"/configuration/pretrainedmodel"},"PretrainedModel resource"))))),(0,n.kt)("h4",{id:"preprocessingservicespec"},"PreprocessingServiceSpec"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Field"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"image"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"string")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Explicit override for the image to use for the service")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"imagePullPolicy"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"string")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Image pull policy. One of Always, Never, IfNotPresent. Defaults to ",(0,n.kt)("inlineCode",{parentName:"td"},"IfNotPresent"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"imagePullSecrets"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.22/#localobjectreference-v1-core"},"LocalObjectReference")," ",(0,n.kt)("em",{parentName:"td"},"array")),(0,n.kt)("td",{parentName:"tr",align:"left"},"List of secrets in the same namespace to use for pulling the image")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"enabled"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"bool")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Enable the service.  Defaults to true")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"nodeSelector"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},"map"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A node selector that will be applied to the Drain service.  This overrides the globalNodeSelector field")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"tolerations"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.22/#toleration-v1-core"},"Toleration")," ",(0,n.kt)("em",{parentName:"td"},"array")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Tolerations for the service.  These will be added to the tolerations in globalTolerations (if any)")))),(0,n.kt)("h4",{id:"payloadreceiverservicespec"},"PayloadReceiverServiceSpec"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Field"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"image"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"string")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Explicit override for the image to use for the service")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"imagePullPolicy"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"string")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Image pull policy. One of Always, Never, IfNotPresent. Defaults to ",(0,n.kt)("inlineCode",{parentName:"td"},"IfNotPresent"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"imagePullSecrets"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.22/#localobjectreference-v1-core"},"LocalObjectReference")," ",(0,n.kt)("em",{parentName:"td"},"array")),(0,n.kt)("td",{parentName:"tr",align:"left"},"List of secrets in the same namespace to use for pulling the image")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"enabled"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"bool")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Enable the service.  Defaults to true")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"nodeSelector"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},"map"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A node selector that will be applied to the Drain service.  This overrides the globalNodeSelector field")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"tolerations"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.22/#toleration-v1-core"},"Toleration")," ",(0,n.kt)("em",{parentName:"td"},"array")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Tolerations for the service.  These will be added to the tolerations in globalTolerations (if any)")))),(0,n.kt)("h4",{id:"gpucontrollerservicespec"},"GPUControllerServiceSpec"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Field"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"image"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"string")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Explicit override for the image to use for the service")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"imagePullPolicy"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"string")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Image pull policy. One of Always, Never, IfNotPresent. Defaults to ",(0,n.kt)("inlineCode",{parentName:"td"},"IfNotPresent"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"imagePullSecrets"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.22/#localobjectreference-v1-core"},"LocalObjectReference")," ",(0,n.kt)("em",{parentName:"td"},"array")),(0,n.kt)("td",{parentName:"tr",align:"left"},"List of secrets in the same namespace to use for pulling the image")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"enabled"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"bool")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Enable the service.  Defaults to true")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"nodeSelector"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},"map"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A node selector that will be applied to the Drain service.  This overrides the globalNodeSelector field")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"tolerations"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.22/#toleration-v1-core"},"Toleration")," ",(0,n.kt)("em",{parentName:"td"},"array")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Tolerations for the service.  These will be added to the tolerations in globalTolerations (if any)")))),(0,n.kt)("h4",{id:"metricsservicespec"},"MetricsServiceSpec"),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("p",{parentName:"admonition"},"The metrics anomaly service is currently experimental")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Field"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"image"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"string")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Explicit override for the image to use for the service")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"imagePullPolicy"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"string")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Image pull policy. One of Always, Never, IfNotPresent. Defaults to ",(0,n.kt)("inlineCode",{parentName:"td"},"IfNotPresent"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"imagePullSecrets"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.22/#localobjectreference-v1-core"},"LocalObjectReference")," ",(0,n.kt)("em",{parentName:"td"},"array")),(0,n.kt)("td",{parentName:"tr",align:"left"},"List of secrets in the same namespace to use for pulling the image")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"enabled"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"bool")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Enable the service.  Defaults to true")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"nodeSelector"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},"map"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A node selector that will be applied to the Drain service.  This overrides the globalNodeSelector field")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"tolerations"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.22/#toleration-v1-core"},"Toleration")," ",(0,n.kt)("em",{parentName:"td"},"array")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Tolerations for the service.  These will be added to the tolerations in globalTolerations (if any)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"prometheus"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"#prometheusreference"},"PrometheusReference")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Reference to a prometheus-operator Prometheus resource.  If this is provided ServiceMonitor and PrometheusRule resources will be created")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"prometheusEndpoint"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"string")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Endpoint of Prometheus cluster for the cluster.  This is required if the prometheus reference is not provided, or the referenced Prometheus object doens't include an externalURL")))),(0,n.kt)("h4",{id:"insightsservicespec"},"InsightsServiceSpec"),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("p",{parentName:"admonition"},"The insights service is currently experimental.  It provides an API that the custom UI uses.")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Field"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"image"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"string")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Explicit override for the image to use for the service")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"imagePullPolicy"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"string")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Image pull policy. One of Always, Never, IfNotPresent. Defaults to ",(0,n.kt)("inlineCode",{parentName:"td"},"IfNotPresent"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"imagePullSecrets"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.22/#localobjectreference-v1-core"},"LocalObjectReference")," ",(0,n.kt)("em",{parentName:"td"},"array")),(0,n.kt)("td",{parentName:"tr",align:"left"},"List of secrets in the same namespace to use for pulling the image")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"enabled"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"bool")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Enable the service.  Defaults to true")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"nodeSelector"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},"map"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A node selector that will be applied to the Drain service.  This overrides the globalNodeSelector field")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"tolerations"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.22/#toleration-v1-core"},"Toleration")," ",(0,n.kt)("em",{parentName:"td"},"array")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Tolerations for the service.  These will be added to the tolerations in globalTolerations (if any)")))),(0,n.kt)("h4",{id:"uiservicespec"},"UIServiceSpec"),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("p",{parentName:"admonition"},"The UI is currently experimental.  It is not currently exposed outside the cluster, however changes to the Kubernetes Service will not be reconciled, so it can be updated to be a LoadBalancer or NodePort.")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Field"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"image"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"string")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Explicit override for the image to use for the service")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"imagePullPolicy"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"string")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Image pull policy. One of Always, Never, IfNotPresent. Defaults to ",(0,n.kt)("inlineCode",{parentName:"td"},"IfNotPresent"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"imagePullSecrets"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.22/#localobjectreference-v1-core"},"LocalObjectReference")," ",(0,n.kt)("em",{parentName:"td"},"array")),(0,n.kt)("td",{parentName:"tr",align:"left"},"List of secrets in the same namespace to use for pulling the image")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"enabled"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"bool")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Enable the service.  Defaults to true")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"nodeSelector"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},"map"),(0,n.kt)("td",{parentName:"tr",align:"left"},"A node selector that will be applied to the Drain service.  This overrides the globalNodeSelector field")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"tolerations"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.22/#toleration-v1-core"},"Toleration")," ",(0,n.kt)("em",{parentName:"td"},"array")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Tolerations for the service.  These will be added to the tolerations in globalTolerations (if any)")))),(0,n.kt)("h4",{id:"prometheusreference"},"PrometheusReference"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Field"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"name"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Yes"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"string")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The name of the Prometheus resource")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"namespace"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Yes"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"string")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The namespace the Prometheus resource is in")))))}s.isMDXComponent=!0}}]);