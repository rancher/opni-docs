"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[394],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=c(n),m=r,b=d["".concat(s,".").concat(m)]||d[m]||p[m]||i;return n?a.createElement(b,l(l({ref:t},u),{},{components:n})):a.createElement(b,l({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var c=2;c<i;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(7294),r=n(6010);const i="tabItem_Ymn6";function l(e){let{children:t,hidden:n,className:l}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(i,l),hidden:n},t)}},5488:(e,t,n)=>{n.d(t,{Z:()=>m});var a=n(7462),r=n(7294),i=n(6010),l=n(2389),o=n(7392),s=n(7094),c=n(2466);const u="tabList__CuJ",p="tabItem_LNqP";function d(e){var t;const{lazy:n,block:l,defaultValue:d,values:m,groupId:b,className:g}=e,f=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),h=m??f.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),v=(0,o.l)(h,((e,t)=>e.value===t.value));if(v.length>0)throw new Error(`Docusaurus error: Duplicate values "${v.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const y=null===d?d:d??(null==(t=f.find((e=>e.props.default)))?void 0:t.props.value)??f[0].props.value;if(null!==y&&!h.some((e=>e.value===y)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${y}" but none of its children has the corresponding value. Available values are: ${h.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:k,setTabGroupChoices:O}=(0,s.U)(),[w,N]=(0,r.useState)(y),T=[],{blockElementScrollPositionUntilNextRender:x}=(0,c.o5)();if(null!=b){const e=k[b];null!=e&&e!==w&&h.some((t=>t.value===e))&&N(e)}const I=e=>{const t=e.currentTarget,n=T.indexOf(t),a=h[n].value;a!==w&&(x(t),N(a),null!=b&&O(b,String(a)))},E=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{const t=T.indexOf(e.currentTarget)+1;n=T[t]??T[0];break}case"ArrowLeft":{const t=T.indexOf(e.currentTarget)-1;n=T[t]??T[T.length-1];break}}null==(t=n)||t.focus()};return r.createElement("div",{className:(0,i.Z)("tabs-container",u)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":l},g)},h.map((e=>{let{value:t,label:n,attributes:l}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:e=>T.push(e),onKeyDown:E,onFocus:I,onClick:I},l,{className:(0,i.Z)("tabs__item",p,null==l?void 0:l.className,{"tabs__item--active":w===t})}),n??t)}))),n?(0,r.cloneElement)(f.filter((e=>e.props.value===w))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},f.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==w})))))}function m(e){const t=(0,l.Z)();return r.createElement(d,(0,a.Z)({key:String(t)},e))}},1269:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>c,toc:()=>p});var a=n(7462),r=(n(7294),n(3905)),i=n(5488),l=n(5162);const o={title:"Opni - Multi-Cluster Observability with AIOps",slug:"/"},s=void 0,c={unversionedId:"index",id:"index",title:"Opni - Multi-Cluster Observability with AIOps",description:"Opni is an open-source software designed for multi-cluster and multi-tenant observability. Built on Kubernetes, Opni simplifies the process of creating and managing backends, agents, and data related to logging, monitoring, and tracing. With built-in AIOps, Opni allows users to swiftly detect anomalous activities in their data.",source:"@site/docs/index.md",sourceDirName:".",slug:"/",permalink:"/",draft:!1,editUrl:"https://github.com/rancher/opni-docs/edit/main/docs/index.md",tags:[],version:"current",frontMatter:{title:"Opni - Multi-Cluster Observability with AIOps",slug:"/"},sidebar:"tutorialSidebar",next:{title:"Opni Installation",permalink:"/installation/opni"}},u={},p=[{value:"Opni Components",id:"opni-components",level:2}],d={toc:p};function m(e){let{components:t,...o}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Opni is an open-source software designed for multi-cluster and multi-tenant observability. Built on Kubernetes, Opni simplifies the process of creating and managing backends, agents, and data related to logging, monitoring, and tracing. With built-in AIOps, Opni allows users to swiftly detect anomalous activities in their data."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Opni Architecture",src:n(521).Z,width:"574",height:"346"})),(0,r.kt)("h2",{id:"opni-components"},"Opni Components"),(0,r.kt)("p",null,"The three key elements of observability are ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"logs, metrics, and traces")),".\nObservability backends and agents handle the collection and storage of this data. AIOps aids in understanding this observability data, and Opni encompasses all these components."),(0,r.kt)(i.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"backends",label:"Observability Backends",default:!0,mdxType:"TabItem"},(0,r.kt)("p",null,"Observability backends receive and store various data types.\nOpni, designed with Kubernetes in mind, builds on popular open-source tools to serve as backends. Although these backends can be challenging to set up, Opni streamlines their creation and management."),(0,r.kt)("p",null,"Currently, you can create the following:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Opni Logging")," - enhances ",(0,r.kt)("a",{parentName:"li",href:"https://opensearch.org"},"Opensearch")," for easy searching, visualization, and analysis of ",(0,r.kt)("strong",{parentName:"li"},"logs"),", ",(0,r.kt)("strong",{parentName:"li"},"traces"),", and ",(0,r.kt)("strong",{parentName:"li"},"Kubernetes events")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Opni Monitoring")," - extends ",(0,r.kt)("a",{parentName:"li",href:"https://cortexmetrics.io"},"Cortex")," for multi-cluster, long-term storage of ",(0,r.kt)("strong",{parentName:"li"},"Prometheus metrics")))),(0,r.kt)(l.Z,{value:"agents",label:"Observability Agents",mdxType:"TabItem"},(0,r.kt)("p",null,"Observability agents are software that collects observability data (logs, metrics, traces, and events) from their host and sends it to an observability backend.\nInstalling the Opni agent in Kubernetes clusters enables the collection of logs, Kubernetes events, OpenTelemetry traces, and Prometheus metrics with a single click.")),(0,r.kt)(l.Z,{value:"aiops",label:"AIOps",mdxType:"TabItem"},(0,r.kt)("p",null,"AIOps involves the application of AI and machine learning to IT and observability data.\nOpni AIOps features include:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Log anomaly detection"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Pretrained models for ",(0,r.kt)("a",{parentName:"li",href:"https://kubernetes.io/docs/concepts/overview/components/"},"Kubernetes control plane"),", ",(0,r.kt)("a",{parentName:"li",href:"https://www.rancher.com/why-rancher"},"Rancher"),", and ",(0,r.kt)("a",{parentName:"li",href:"https://longhorn.io/"},"Longhorn")),(0,r.kt)("li",{parentName:"ul"},"Capability to learn and self-train models based on your workload logs if a GPU is available on the cluster"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Root cause detection")," (coming soon)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Metric anomaly detection")," (coming soon)"))),(0,r.kt)(l.Z,{value:"alerting",label:"Alerting and SLOs",mdxType:"TabItem"},(0,r.kt)("p",null,"Creating triggers and reliability targets for services allows you to utilize your data effectively and make informed decisions regarding software operations. Opni alerting enables this through its alerting and SLO interface."))))}m.isMDXComponent=!0},521:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/high_level_arch-802731cb5309767f835d21f46f118000.png"}}]);