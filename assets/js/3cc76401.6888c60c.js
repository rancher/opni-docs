"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[327],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>m});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=a.createContext({}),l=function(e){var t=a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},d=function(e){var t=l(e.components);return a.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,p=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=l(r),m=n,f=u["".concat(p,".").concat(m)]||u[m]||c[m]||o;return r?a.createElement(f,i(i({ref:t},d),{},{components:r})):a.createElement(f,i({ref:t},d))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=u;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var l=2;l<o;l++)i[l]=r[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},5157:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var a=r(7462),n=(r(7294),r(3905));const o={title:"Setup Grafana Dashboard for Metric Service"},i=void 0,s={unversionedId:"setup/setup-grafana-dashboard",id:"setup/setup-grafana-dashboard",title:"Setup Grafana Dashboard for Metric Service",description:"The Opni system supports an experimental version of metric anomaly detection service. To start get insights from it, its Grafana dashboard needs to be setup as follow:",source:"@site/docs/setup/setup-grafana-dashboard.md",sourceDirName:"setup",slug:"/setup/setup-grafana-dashboard",permalink:"/setup/setup-grafana-dashboard",draft:!1,editUrl:"https://github.com/rancher/opni-docs/edit/main/docs/setup/setup-grafana-dashboard.md",tags:[],version:"current",frontMatter:{title:"Setup Grafana Dashboard for Metric Service"}},p={},l=[{value:"Prerequisites:",id:"prerequisites",level:4},{value:"Setup Dashboard",id:"setup-dashboard",level:4}],d={toc:l};function c(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"The Opni system supports an experimental version of metric anomaly detection service. To start get insights from it, its Grafana dashboard needs to be setup as follow:"),(0,n.kt)("h4",{id:"prerequisites"},"Prerequisites:"),(0,n.kt)("p",null,"The Opni Metric Service requires Prometheus and Grafana to run. Rancher users can simply ",(0,n.kt)("a",{parentName:"p",href:"https://rancher.com/docs/rancher/v2.5/en/monitoring-alerting/guides/enable-monitoring/"},"enable Rancher monitoring")," to install Prometheus and Grafana."),(0,n.kt)("h4",{id:"setup-dashboard"},"Setup Dashboard"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Navigate to Grafana and log in. For a Rancher Monitoring user, the default username/password is ",(0,n.kt)("inlineCode",{parentName:"li"},"admin/prom-operator"),". Otherwise, it is likely to be ",(0,n.kt)("inlineCode",{parentName:"li"},"admin/admin"),"."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("a",{parentName:"li",href:"https://grafana.com/docs/grafana/latest/datasources/add-a-data-source/#add-a-data-source"},"Add Elasticsearch as a Data Source"),", and fill in these fields with following values:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"URL: https://opni-es-client.opni.svc:9200\nBasic Auth: enable\nSkip TLS Verify: enable\nBasic Auth Details:\n    User: admin\n    Password: <opni-es-password>\nIndex name: mymetrics\nTime field name: timestamp\nVersion: 7.0+\n")),(0,n.kt)("p",null,"Then click ",(0,n.kt)("inlineCode",{parentName:"p"},"Save & Test"),". The expected response should be ",(0,n.kt)("inlineCode",{parentName:"p"},"Index OK. Time field name OK."),"\n3. ",(0,n.kt)("a",{parentName:"p",href:"https://grafana.com/docs/grafana/latest/dashboards/export-import/#import-dashboard"},"Import dashboard")," and upload the json file ",(0,n.kt)("inlineCode",{parentName:"p"},"grafana-dashboard.json")," in this repo."),(0,n.kt)("p",null,"A dashboard named ",(0,n.kt)("inlineCode",{parentName:"p"},"MetricAnomaly")," should now be available."))}c.isMDXComponent=!0}}]);