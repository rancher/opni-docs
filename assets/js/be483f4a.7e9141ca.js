"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>f});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=r.createContext({}),s=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},m=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,p=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),c=s(a),f=n,k=c["".concat(p,".").concat(f)]||c[f]||d[f]||l;return a?r.createElement(k,o(o({ref:t},m),{},{components:a})):r.createElement(k,o({ref:t},m))}));function f(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,o=new Array(l);o[0]=c;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:n,o[1]=i;for(var s=2;s<l;s++)o[s]=a[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}c.displayName="MDXCreateElement"},5166:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var r=a(7462),n=(a(7294),a(3905));const l={title:"Opensearch"},o=void 0,i={unversionedId:"configuration/elasticsearch",id:"configuration/elasticsearch",title:"Opensearch",description:"The Opni operator integrates the Opensearch Operator.  If an OpenSearchCluster resource is created then Opni will create the Opensearch cluster e.g.",source:"@site/docs/configuration/elasticsearch.md",sourceDirName:"configuration",slug:"/configuration/elasticsearch",permalink:"/configuration/elasticsearch",draft:!1,editUrl:"https://github.com/rancher/opni-docs/edit/main/docs/configuration/elasticsearch.md",tags:[],version:"current",frontMatter:{title:"Opensearch"}},p={},s=[{value:"Custom Resource Specs",id:"custom-resource-specs",level:3},{value:"OpensearchSpec",id:"opensearchspec",level:4},{value:"OpensearchWorkloadSpec",id:"opensearchworkloadspec",level:4},{value:"OpensearchWorkloadOptions",id:"opensearchworkloadoptions",level:4},{value:"ImageSpec",id:"imagespec",level:4},{value:"PersistenceSpec",id:"persistencespec",level:4},{value:"OpensearchClusterRef",id:"opensearchclusterref",level:4}],m={toc:s};function d(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"The Opni operator integrates the ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/Opster/opensearch-k8s-operator"},"Opensearch Operator"),".  If an OpenSearchCluster resource is created then Opni will create the Opensearch cluster e.g."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: opensearch.opster.io/v1\nkind: OpenSearchCluster\nmetadata:\n  name: opni\n  namespace: opni-system\nspec:\n  # Add fields here\n  general:\n    httpPort: 9200\n    vendor: opensearch\n    version: 1.2.3\n    serviceName: os-svc\n    setVMMaxMapCount: true\n  confMgmt:\n    autoScaler: false\n    monitoring: false\n  dashboards:\n    enable: true\n    version: 1.2.0\n    replicas: 1\n  nodePools:\n  - component: master\n    replicas: 3\n    diskSize: 32\n    resources:\n      requests:\n        cpu: 500m\n        memory: 1Gi\n      limits:\n        memory: 1Gi\n    roles:\n    - master\n    persistence:\n      emptyDir: {}\n  - component: nodes\n    replicas: 2\n    diskSize: 32\n    resources:\n      requests:\n        cpu: 500m\n        memory: 2Gi\n      limits:\n        memory: 2Gi\n    jvm: "-Xmx1G -Xms1G"\n    roles:\n    - data\n    persistence:\n      emptyDir: {}\n')),(0,n.kt)("p",null,"The Opensearch cluster can then be referenced by Opni.   The Opni controller will also create indices and configuration in the Opensearch cluster."),(0,n.kt)("p",null,(0,n.kt)("em",{parentName:"p"},"example.yaml")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: opni.io/v1beta2\nkind: OpniCluster\nmetadata:\n  name: example\n  namespace: opni\nspec:\n  opensearch:\n    externalOpensearch:\n      name: opni\n      namespace: opni-system\n")),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("p",{parentName:"admonition"},"The following Opensearch configuration is deprecated and will be removed in a future version.")),(0,n.kt)("p",null,"Alternatively the deployment of the Opensearch cluster can be defined as a subsection of the ",(0,n.kt)("a",{parentName:"p",href:"/configuration/opnicluster"},"OpniCluster")," resource.  It deploys an Opensearch cluster and Dashboards for visualization."),(0,n.kt)("p",null,(0,n.kt)("em",{parentName:"p"},"example.yaml")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: opni.io/v1beta2\nkind: OpniCluster\nmetadata:\n  name: example\n  namespace: opni\nspec:\n  opensearch:\n    version: 1.13.2\n    workloads:\n      master:\n        resources:\n          requests:\n            memory: 1Gi\n          limits:\n            memory: 1Gi\n      data:\n        replicas: 2\n        resources:\n          requests:\n            memory: 2Gi\n          limits:\n            memory: 2Gi\n")),(0,n.kt)("h3",{id:"custom-resource-specs"},"Custom Resource Specs"),(0,n.kt)("h4",{id:"opensearchspec"},"OpensearchSpec"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Field"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"externalOpensearch"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"#opensearchclusterref"},"OpensearchClusterRef")),(0,n.kt)("td",{parentName:"tr",align:"left"},"A reference to an OpenSearchCluster resource.  If this is not present Opni will create an Opensearch cluster based on the rest of the spec")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"version"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"string")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Version of the Opendistro image to use.  Defaults to ",(0,n.kt)("inlineCode",{parentName:"td"},"latest"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"workloads"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"#opensearchworkloadspec"},"OpensearchWorkloadSpec")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Configure the Opensearchsearch cluster components")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"defaultRepo"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"string")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Image repo to use for Opensearchsearch images.  Defaults to ",(0,n.kt)("inlineCode",{parentName:"td"},"docker.io/amazon"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"image"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"#imagespec"},"ImageSpec")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Explicit configuration for the Opensearchsearch image")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"kibanaImage"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"#imagespec"},"ImageSpec")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Explicit configuration for the Kibana image")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"persistence"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"#persistencespec"},"PersistenceSpec")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Configure the persistence for Opensearchsearch data")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"configSecret"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.22/#localobjectreference-v1-core"},"LocalObjectReference")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Reference to a secret containing ",(0,n.kt)("inlineCode",{parentName:"td"},"logging.yml")," with the Opensearchsearch logging config")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"adminPasswordFrom"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.22/#secretkeyselector-v1-core"},"SecretKeySelector")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Secret key selector pointing to the admin password to use.  If not set a password will be autogenerated and stored in the password key in a secret called opni-es-password")))),(0,n.kt)("h4",{id:"opensearchworkloadspec"},"OpensearchWorkloadSpec"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Field"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"master"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"#opensearchworkloadoptions"},"OpensearchWorkloadOptions")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Configuration for the Opensearchsearch master node StatefulSet"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"data"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"#opensearchworkloadoptions"},"OpensearchWorkloadOptions")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Configuration for the Opensearchsearch data node StatefulSet"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"client"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"#opensearchworkloadoptions"},"OpensearchWorkloadOptions")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Configuration for the Opensearchsearch client node Deployment"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"kibana"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"#opensearchworkloadoptions"},"OpensearchWorkloadOptions")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Configuration for the Kibana Deployment"),(0,n.kt)("td",{parentName:"tr",align:"left"})))),(0,n.kt)("h4",{id:"opensearchworkloadoptions"},"OpensearchWorkloadOptions"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Field"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"replicas"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"int")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Number of replicas to deploy.  Defaults to ",(0,n.kt)("inlineCode",{parentName:"td"},"1"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"resources"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.22/#resourcerequirements-v1-core"},"ResourceRequirements")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Resources for the workload.  The resources are used to calculate the Java memory options.  If a memory limit exists this is used, if there is a memory request but no limit that is used, otherwise the Java optioms default to a heap size of 512MB")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"affinity"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.22/#affinity-v1-core"},"Affinity")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Affinity settings for the workload pods")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"nodeSelector"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},"map"),(0,n.kt)("td",{parentName:"tr",align:"left"},"NodeSelector for the workload pods.  If this exists it will override the globalNodeSelector")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"tolerations"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.22/#toleration-v1-core"},"Toleration")," ",(0,n.kt)("em",{parentName:"td"},"array")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Tolerations for the workload.  These will be combined with the globalTolerations (if any)")))),(0,n.kt)("h4",{id:"imagespec"},"ImageSpec"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Field"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"image"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"string")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Explicit CRI image to use")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"imagePullPolicy"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"string")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Image pull policy. One of Always, Never, IfNotPresent. Defaults to ",(0,n.kt)("inlineCode",{parentName:"td"},"IfNotPresent"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"imagePullSecrets"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.22/#localobjectreference-v1-core"},"LocalObjectReference")," ",(0,n.kt)("em",{parentName:"td"},"array")),(0,n.kt)("td",{parentName:"tr",align:"left"},"List of secrets in the same namespace to use for pulling the image")))),(0,n.kt)("h4",{id:"persistencespec"},"PersistenceSpec"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Field"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"enabled"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"bool")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Whether persistent storage is enabled.  Defaults to ",(0,n.kt)("inlineCode",{parentName:"td"},"false"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"storageClassName"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"string")),(0,n.kt)("td",{parentName:"tr",align:"left"},"If persistent storage is enabled, the name of the StorageClass to use.  If not set will use the default StorageClass")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"accessModes"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"string array")),(0,n.kt)("td",{parentName:"tr",align:"left"},"An array of the ",(0,n.kt)("a",{parentName:"td",href:"https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes"},"access modes")," the volume supports")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"request"),(0,n.kt)("td",{parentName:"tr",align:"left"},"No"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"string")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The size of the volume to request.  Defaults to ",(0,n.kt)("inlineCode",{parentName:"td"},"10Gi"))))),(0,n.kt)("h4",{id:"opensearchclusterref"},"OpensearchClusterRef"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Field"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"name"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Yes"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"string")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The name of the OpenSearchCluster object")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"namespace"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Yes"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"string")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The namespace of the OpenSearchCluster object")))))}d.isMDXComponent=!0}}]);