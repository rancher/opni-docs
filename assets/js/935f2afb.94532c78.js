"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"v0.10","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction","href":"/","docId":"index"},{"type":"category","label":"Installation","collapsible":false,"items":[{"type":"category","label":"Install Opni","items":[{"type":"link","label":"Enable Backends","href":"/installation/opni/backends","docId":"installation/opni/backends"},{"type":"link","label":"Enable AIOps","href":"/installation/opni/aiops","docId":"installation/opni/aiops"},{"type":"link","label":"Enable SLOs","href":"/installation/opni/slo","docId":"installation/opni/slo"}],"collapsed":true,"collapsible":true,"href":"/installation/opni"},{"type":"category","label":"Install Opni Agent","items":[{"type":"link","label":"Enable Capabilities","href":"/installation/opni_agent/capabilities","docId":"installation/opni_agent/capabilities"}],"collapsed":true,"collapsible":true,"href":"/installation/opni_agent"},{"type":"link","label":"Uninstall Opni","href":"/installation/uninstall","docId":"installation/uninstall"}],"collapsed":false},{"type":"category","label":"Advanced Guides","items":[{"type":"link","label":"Quickstart with Rancher Desktop","href":"/guides/rancher-desktop/","docId":"guides/rancher-desktop/index"},{"type":"link","label":"Install Opentelemetry Collector","href":"/guilds/install-otel-collector/index","docId":"guides/install-otel-collector/index"},{"type":"link","label":"Rancher Monitoring Data Import","href":"/guides/prometheus-import","docId":"guides/prometheus-import/index"},{"type":"link","label":"Alerting User Guide","href":"/guides/alerting/","docId":"guides/alerting/index"}],"collapsed":true,"collapsible":true}]},"docs":{"apiversions/v1beta2":{"id":"apiversions/v1beta2","title":"Migration to v1beta2","description":"The following changes have been made in the v1beta2 API version:"},"architecture/highlevel":{"id":"architecture/highlevel","title":"High-level Architecture","description":"At a high level Opni is made up of a number of microservices communicating via NATS.  Logs are persisted in Opendistro Elasticsearch and AI assets are stored in S3."},"configuration/dataprepper":{"id":"configuration/dataprepper","title":"DataPrepper","description":"The DataPrepper resource is created by opnictl when a downstream cluster is bootstrapped for multicluster logging.  It deploys an Opensearch Data Prepper instance configured to ship to Opni"},"configuration/elasticsearch":{"id":"configuration/elasticsearch","title":"Opensearch","description":"The Opni operator integrates the Opensearch Operator.  If an OpenSearchCluster resource is created then Opni will create the Opensearch cluster e.g."},"configuration/gpuadapter":{"id":"configuration/gpuadapter","title":"GPU Policy Adapter","description":"The GPU Adapter is currently experimental and is behind a feature gate.  To turn this on you need to run the Opni Manager with the following argument --feature-gates=GPUOperator=true"},"configuration/logadapter":{"id":"configuration/logadapter","title":"LogAdapter","description":"The LogAdapter custom resource simplifies the configuration of log shipping for a range of Kubernetes distributions.  It builds on the Banzai Cloud logging operator to do this."},"configuration/nats":{"id":"configuration/nats","title":"NATS","description":"Opni requires a NATS cluster to enable communication between services. The deployment of a NATS cluster is configured by a subsection of the OpniCluster resource."},"configuration/opnicluster":{"id":"configuration/opnicluster","title":"OpniCluster","description":"The OpniCluster resource controls the deployment of the Opni microservices, along with prerequisite infrastructure (such as NATS).  This is the main resource used for deploying Opni."},"configuration/pretrainedmodel":{"id":"configuration/pretrainedmodel","title":"PretrainedModel","description":"The Opni system has the ability to make use of pretrained nulog models.  Currently we provide a pretrained model for the Kubernetes control plane.  The configuration for pretrained models is controlled by the PretrainedModel resource.  This resource is then referenced by the OpniCluster resource to deploy the model"},"configuration/s3":{"id":"configuration/s3","title":"S3","description":"Opni requires an S3 endpoint to store the AI models for the Drain and Inference services.  This can be endpoint for an external S3 compatible API, or Opni can deploy a SeaweedFS pod to serve the S3 API."},"deployment/advanced":{"id":"deployment/advanced","title":"Advanced Installation","description":"Prerequisites:"},"deployment/basic":{"id":"deployment/basic","title":"Basic Installation","description":"1) Install Cert Manager"},"deployment/quickstart":{"id":"deployment/quickstart","title":"Quickstart","description":"On a fresh VM run the quickstart script:"},"guides/alerting/index":{"id":"guides/alerting/index","title":"Opni Alerting : User Guide","description":"This guide walks through the usage of Opni-Alerting.","sidebar":"tutorialSidebar"},"guides/install-otel-collector/index":{"id":"guides/install-otel-collector/index","title":"Install and Config OpenTelemetry-Collector","description":"Install using Helm","sidebar":"tutorialSidebar"},"guides/prometheus-import/index":{"id":"guides/prometheus-import/index","title":"Prometheus Data Import","description":"This guide walks you through importing the metrics data stored by an existing Rancher Monitoring installation.","sidebar":"tutorialSidebar"},"guides/rancher-desktop/index":{"id":"guides/rancher-desktop/index","title":"Quick Start using Rancher Desktop","description":"This guide walks you through installation of Opni on Rancher Desktop, an open-sourced desktop application for Linux, MacOS and Windows. In 10 mins, you will have Opni deployed on a local k3s cluster.","sidebar":"tutorialSidebar"},"index":{"id":"index","title":"Opni - Multi-Cluster Observability with AIOps","description":"Opni is an open-source software designed for multi-cluster and multi-tenant observability. Built on Kubernetes, Opni simplifies the process of creating and managing backends, agents, and data related to logging, monitoring, and tracing. With built-in AIOps, Opni allows users to swiftly detect anomalous activities in their data.","sidebar":"tutorialSidebar"},"installation/opni_agent/capabilities":{"id":"installation/opni_agent/capabilities","title":"Enable capabilities in downstream agents","description":"By default, agents do not have any capabilities enabled. From the Opni dashboard or CLI, you can enable or disable capabilities per agent.","sidebar":"tutorialSidebar"},"installation/opni_agent/index":{"id":"installation/opni_agent/index","title":"Opni Agent Installation","description":"There are two ways to install Opni agent. We recommend installation through the Rancher UI.","sidebar":"tutorialSidebar"},"installation/opni/aiops":{"id":"installation/opni/aiops","title":"Enable Opni AIOps","description":"Logging backend must be enabled before enabling AIOps","sidebar":"tutorialSidebar"},"installation/opni/backends":{"id":"installation/opni/backends","title":"Opni Backends","description":"An observability backend is where observability data is sent for storage and querying. Backends are configured in the Opni Management UI.","sidebar":"tutorialSidebar"},"installation/opni/index":{"id":"installation/opni/index","title":"Opni Installation","description":"There are a few different ways to install Opni. We recommend installation through the Rancher UI.","sidebar":"tutorialSidebar"},"installation/opni/slo":{"id":"installation/opni/slo","title":"Enable SLOs","description":"Introduction","sidebar":"tutorialSidebar"},"installation/uninstall":{"id":"installation/uninstall","title":"Uninstall Opni","description":"Before uninstalling all capabilities should be removed from all clusters.  This can be done by clicking an installed capability in the clusters screen and choosing to remove the capability.","sidebar":"tutorialSidebar"},"log-anomaly/log-anomaly":{"id":"log-anomaly/log-anomaly","title":"Opni Log Anomaly Setup","description":"Following this guide will allow you to setup Opni Log Anomaly Detection on your cluster."},"logging/logging":{"id":"logging/logging","title":"Opni Logging Setup","description":"Opni Logging{ loading=lazy }"},"logging/user-management":{"id":"logging/user-management","title":"User Management","description":"Opensearch Users can be managed within Opensearch itself. When a logging cluster is bootstrapped Opni will create a role in Opensearch that provides read access to the logs from that cluster.  Alternatively Opni can manage the Opensearch users."},"setup/gpu":{"id":"setup/gpu","title":"Cluster GPU Configuration","description":"Automatic GPU Operator Configuration"},"setup/log-shipping":{"id":"setup/log-shipping","title":"Log Shipping","description":"The Opni payload receiver service provides a http endpoint for receiving JSON formatted logs from the FluentD http output.  The recommended mechanism for configuring FluentD is to use the Banzaicloud logging operator"},"setup/metrics":{"id":"setup/metrics","title":"Metrics Anomaly Detection (beta)","description":"Metrics anomaly detection in Opni depends on having a Prometheus instance set up, and collecting metrics from the Kubernetes cluster.  The Opni metrics service exposes the predictions via a Prometheus metrics enddpoint so this also needs to be regularly scraped."},"setup/setup-grafana-dashboard":{"id":"setup/setup-grafana-dashboard","title":"Setup Grafana Dashboard for Metric Service","description":"The Opni system supports an experimental version of metric anomaly detection service. To start get insights from it, its Grafana dashboard needs to be setup as follow:"}}}')}}]);