"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[702],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=o,f=d["".concat(p,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(f,i(i({ref:t},c),{},{components:n})):r.createElement(f,i({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5260:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var r=n(7462),o=(n(7294),n(3905));const a={title:"Advanced Installation"},i=void 0,l={unversionedId:"deployment/advanced",id:"deployment/advanced",title:"Advanced Installation",description:"Prerequisites:",source:"@site/docs/deployment/advanced.md",sourceDirName:"deployment",slug:"/deployment/advanced",permalink:"/deployment/advanced",draft:!1,editUrl:"https://github.com/rancher/opni-docs/edit/main/docs/deployment/advanced.md",tags:[],version:"current",frontMatter:{title:"Advanced Installation"}},p={},s=[{value:"Prerequisites:",id:"prerequisites",level:3},{value:"Clone the Opni repo",id:"clone-the-opni-repo",level:3},{value:"Install the Opni operator",id:"install-the-opni-operator",level:3},{value:"Wait for the operator to be ready",id:"wait-for-the-operator-to-be-ready",level:3},{value:"Configure and install Opni components",id:"configure-and-install-opni-components",level:3}],c={toc:s};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h3",{id:"prerequisites"},"Prerequisites:"),(0,o.kt)("p",null,"Opni requires Cert-Manager to run. Follow the official ",(0,o.kt)("a",{parentName:"p",href:"https://cert-manager.io/docs/installation/"},"instructions")," to install Cert-Manager."),(0,o.kt)("h3",{id:"clone-the-opni-repo"},"Clone the Opni repo"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ git clone https://github.com/rancher/opni-docs.git\n# Or by using the github CLI:\n$ gh repo clone rancher/opni\n")),(0,o.kt)("h3",{id:"install-the-opni-operator"},"Install the Opni operator"),(0,o.kt)("p",null,"Run the following command to install the Opni operator with Kustomize:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"$ kubectl create -k config/default\n")),(0,o.kt)("h3",{id:"wait-for-the-operator-to-be-ready"},"Wait for the operator to be ready"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"$ kubectl wait --timeout=300s --for=condition=available deploy/opni-controller-manager -n opni-system\n")),(0,o.kt)("h3",{id:"configure-and-install-opni-components"},"Configure and install Opni components"),(0,o.kt)("p",null,"Configure which Opni components will be installed by editing ",(0,o.kt)("inlineCode",{parentName:"p"},"deploy/kustomization.yaml"),".\nThis file specifies locations of other YAML files containing the required Opni\ndeployment configuration, as well as example entries for optional features.\nSome optional features require additional configuration in separate files."),(0,o.kt)("p",null,"After configuration is complete, install them using Kustomize:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"$ kubectl create -k deploy\n")),(0,o.kt)("p",null,"After the components are installed, monitor pods running in the opni namespace\nand wait for them to be ready. This may take a few minutes. If GPU support is\nenabled, several GPU Operator pods will be running in the ",(0,o.kt)("inlineCode",{parentName:"p"},"gpu-operator-resources"),"\nnamespace. It takes several minutes for the GPU operator to configure your cluster.\nYour container runtime will be restarted during this process, so it is normal to\nexperience brief connectivity issues during this time."),(0,o.kt)("p",null,"See ",(0,o.kt)("a",{parentName:"p",href:"/setup/gpu"},"Cluster GPU Configuration")," for more details\nregarding GPU operator configuration."),(0,o.kt)("p",null,"To try out the experimental Opni Metric Anomaly Detection service, check ",(0,o.kt)("a",{parentName:"p",href:"/setup/setup-grafana-dashboard"},"Setup Grafana Dashboard")," for next steps."))}u.isMDXComponent=!0}}]);