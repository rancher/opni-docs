"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[433],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),g=l(n),m=a,d=g["".concat(c,".").concat(m)]||g[m]||u[m]||s;return n?r.createElement(d,o(o({ref:t},p),{},{components:n})):r.createElement(d,o({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,o=new Array(s);o[0]=g;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var l=2;l<s;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},1953:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const s={title:"User Management"},o=void 0,i={unversionedId:"logging/user-management",id:"logging/user-management",title:"User Management",description:"Opensearch Users can be managed within Opensearch itself. When a logging cluster is bootstrapped Opni will create a role in Opensearch that provides read access to the logs from that cluster.  Alternatively Opni can manage the Opensearch users.",source:"@site/docs/logging/user-management.md",sourceDirName:"logging",slug:"/logging/user-management",permalink:"/logging/user-management",draft:!1,editUrl:"https://github.com/rancher/opni-docs/edit/main/docs/logging/user-management.md",tags:[],version:"current",frontMatter:{title:"User Management"}},c={},l=[{value:"User creation",id:"user-creation",level:3},{value:"Granting Access to a cluster&#39;s logs",id:"granting-access-to-a-clusters-logs",level:3}],p={toc:l};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Opensearch Users can be managed within Opensearch itself. When a logging cluster is bootstrapped Opni will create a role in Opensearch that provides read access to the logs from that cluster.  Alternatively Opni can manage the Opensearch users."),(0,a.kt)("h3",{id:"user-creation"},"User creation"),(0,a.kt)("p",null,"To create a user in Opensearch create a MulticlusterUser resource:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: opni.io/v1beta2\nkind: MulticlusterUser\nmetadata:\n  name: test\n  namespace: opni-cluster-system\nspec:\n  opensearchClusterRef: # This is a reference to the Opensearch cluster object\n    name: opni\n    namespace: opni-cluster-system\n  password: testpassword\n")),(0,a.kt)("p",null,"This will create a user with the ",(0,a.kt)("inlineCode",{parentName:"p"},"kibanauser")," backend role in the Opensearch cluster"),(0,a.kt)("h3",{id:"granting-access-to-a-clusters-logs"},"Granting Access to a cluster's logs"),(0,a.kt)("p",null,"To allow the user to access the logs for a cluster you will need to create a LoggingClusterBinding object:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: opni.io/v1beta2\nkind: LoggingClusterBinding\nmetadata:\n  name: demobinding\n  namespace: opni-cluster-system\nspec:\n  opensearchClusterRef:\n    name: opni\n    namespace: opni-cluster-system\n  loggingCluster: # Either ID or logging cluster name needs to be specified.  ID is preferred\n    id: 52473120-4e12-427b-9055-c4179f90f6b1 # The cluster ID is the UID of the kube-system namespace in the cluster\n    loggingClusterName: # This is the name/namespace of the object referring to the downstream cluster\n      name: name-of-object\n      namespace: opni-cluster-system\n  user:\n    name: test\n    namespace: opni-cluster-system\n")),(0,a.kt)("p",null,"This will bind the User to the read role for the cluster in Opensearch"))}u.isMDXComponent=!0}}]);